#Paramters
rg=lab-vng-opn
vmsize=Standard_D2d_v4 # Specify the VM size you want to use

# Prompt for location
read -p "Enter the location (hit enter for default: westus3): " location
location=${location:-westus3} # Prompt for location, default to westus3 if not provided

# Prompt for username and password 
read -p "Enter your username (hit enter for default: azureuser): " username
username=${username:-azureuser} # Prompt for username, default to azureuser if not provided
while true; do
  read -s -p "Enter your password: " password
  echo
  read -s -p "Confirm your password: " password_confirm
  echo
  [ "$password" = "$password_confirm" ] && break
  echo "Passwords do not match. Please try again."
done

# Adding script starting time and finish time
start=`date +%s`
echo "Script started at $(date)"

# Check lab-vnet-encryption resource group if exist prompt to delete
echo Checking if $rg resource group exists...
if [ $(az group exists --name $rg) = true ]; then
    read -p "Resource group $rg already exists. Do you want to delete it? (y/n): " delete_rg
    if [ "$delete_rg" == "y" ]; then
        echo "Deleting resource group $rg..."
        az group delete --name $rg --yes
    else
        echo "Exiting script..."
        exit 1
    fi
fi

# Deploy Hub and Spoke 
echo Deploying Hub and Spoke...
az group create --name $rg --location $location -o none
az deployment group create --name Hub1-$location --resource-group $rg \
--template-uri https://raw.githubusercontent.com/dmauser/azure-hub-spoke-base-lab/main/azuredeployv6.json \
--parameters https://raw.githubusercontent.com/dmauser/azure-vnet-encryption/refs/heads/main/parameters.json \
--parameters virtualMachineSize=$vmsize virtualMachinePublicIP=false deployBastion=true \
--parameters VmAdminUsername=$username VmAdminPassword=$password \
--no-wait

# If the command above shows an error, stop script
if [ $? -ne 0 ]; then
    echo "Error deploying Hub and Spoke. Exiting script..."
    exit 1
fi

# Loop script to check deployment status
while true; do
    status=$(az deployment group show --name Hub1-$location --resource-group $rg --query properties.provisioningState -o tsv)
    echo "Deployment status: $status"
    if [ "$status" == "Succeeded" ]; then
        echo "Deployment succeeded."
        break
    elif [ "$status" == "Failed" ]; then
        echo "Deployment failed."
        exit 1
    fi
    sleep 15 # Wait for 15 seconds before checking again
done

